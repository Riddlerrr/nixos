# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

	# boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.blacklistedKernelModules = [ "k10temp" ];
  boot.kernelModules = [ "kvm-amd" "amd-pstate" "zenpower" ];
  boot.extraModulePackages = [ config.boot.kernelPackages.zenpower ];
	boot.kernelParams = [ 
	  "initcall_blacklist=acpi_cpufreq_init" 
		"amd_pstate=active" 
		"nvidia-drm.modeset=1"
  ];

  hardware.amdgpu.initrd.enable = true;
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

	services.xserver.videoDrivers = [ "nvidia" ];
  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };
	hardware.nvidia = {
		# package = config.boot.kernelPackages.nvidiaPackages.mkDriver {
		#     version = "580.95.05";
		#     sha256_64bit = "sha256-hJ7w746EK5gGss3p8RwTA9VPGpp2lGfk5dlhsv4Rgqc=";
		# 	sha256_aarch64 = "sha256-xctt4TPRlOJ6r5S54h5W6PT6/3Zy2R4ASNFPu8TSHKM=";
		# 	openSha256 = "sha256-ZpuVZybW6CFN/gz9rx+UJvQ715FZnAOYfHn5jt5Z2C8=";
		#     settingsSha256 = "sha256-ZpuVZybW6CFN/gz9rx+UJvQ715FZnAOYfHn5jt5Z2C8=";
		# 	persistencedSha256 = "sha256-hdszsACWNqkCh8G4VBNitDT85gk9gJe1BlQ8LdrYIkg=";
		# };
		package = config.boot.kernelPackages.nvidiaPackages.stable;
	  modesetting.enable = true;
	  open = true;
		powerManagement.enable = true;
	  prime = {
      sync.enable = true;
      amdgpuBusId = "PCI:17:0:0";
      nvidiaBusId = "PCI:1:0:0";
    };
	};
	hardware.nvidia-container-toolkit.enable = true; # Nvidia should work from podman containers

  hardware.logitech.wireless.enable = true;

  # enable trim for SSD
	services.fstrim.enable = true;

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/056fa932-4db5-479f-be7b-965df4406786";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-9e8f4b59-8f14-4b25-9d7e-efce37907c03".device = "/dev/disk/by-uuid/9e8f4b59-8f14-4b25-9d7e-efce37907c03";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F0B6-AA0B";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp11s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
